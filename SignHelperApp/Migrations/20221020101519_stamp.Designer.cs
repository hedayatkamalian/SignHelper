// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignHelperApp.Data;

#nullable disable

namespace SignHelperApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221020101519_stamp")]
    partial class stamp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SignHelperApp.Entities.SignRequest", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ConfirmCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("ConfirmCodeExpireIn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("Done")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("ExpireIn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("SignTemplateId")
                        .HasColumnType("bigint");

                    b.Property<string>("SignerEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SignerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("StampTemplateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SignTemplateId");

                    b.ToTable("SignRequests");
                });

            modelBuilder.Entity("SignHelperApp.Entities.Template", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StampName")
                        .HasColumnType("longtext");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("SignHelperApp.Entities.SignRequest", b =>
                {
                    b.HasOne("SignHelperApp.Entities.Template", "SignTemplate")
                        .WithMany("SignRequests")
                        .HasForeignKey("SignTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SignTemplate");
                });

            modelBuilder.Entity("SignHelperApp.Entities.Template", b =>
                {
                    b.OwnsMany("SignHelperApp.Entities.SignPoint", "SignPoints", b1 =>
                        {
                            b1.Property<long>("TemplateId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<int>("Page")
                                .HasColumnType("int");

                            b1.Property<int>("X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnType("int");

                            b1.HasKey("TemplateId", "Id");

                            b1.ToTable("Template_SingPoints", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("TemplateId");
                        });

                    b.Navigation("SignPoints");
                });

            modelBuilder.Entity("SignHelperApp.Entities.Template", b =>
                {
                    b.Navigation("SignRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
